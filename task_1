# Библиотека re в Python предоставляет множество методов для работы с регулярными выражениями

re.search(pattern, string, flags=0)— ищет первое вхождение шаблона pattern в строке string
# Возвращает объект match или None, если ничего не найдено

re.match(pattern, string, flags=0)— ищет шаблон pattern в начале строки string
# Возвращает объект match или None, если ничего не найдено

re.findall(pattern, string, flags=0) — ищет все вхождения шаблона pattern в строке string
# Возвращает список найденных строк

re.sub(pattern, repl, string, count=0, flags=0) — заменяет все вхождения шаблона pattern на строку repl в строке string
# Можно указать максимальное количество замен, используя параметр count

import re

# Поиск всех цен в строке
text = "The price of the product is $100.50"

numbers = re.findall('\d+\.\d+', text)

print(numbers)

# Результат: ['100.50']

# Флаги позволяют настраивать поведение регулярных выражений. Например, вы можете указать, что поиск должен быть регистронезависимым или 
# что точка должна совпадать со всеми символами, включая переводы строк:

re.IGNORECASE или re.I — делает поиск регистронезависимым

re.DOTALL или re.S — делает точку совпадающей со всеми символами, включая переводы строк

re.VERBOSE или re.X — позволяет использовать многострочные регулярные выражения и добавлять комментарии

import re

# Поиск всех цен в строке с использованием флагов
text = "The price of the product is $100.50"

# Флаг re.IGNORECASE не требуется в данном случае,
# но демонстрирует использование флагов
numbers = re.findall(r'\d+\.\d+', text, flags=re.IGNORECASE)

print(numbers)
